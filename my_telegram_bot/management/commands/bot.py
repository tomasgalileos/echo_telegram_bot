from django.core.management.base import BaseCommandfrom telegram import Bot, Updatefrom telegram.ext import Updater, MessageHandler, Filters, CallbackContext, \    CommandHandlerfrom django.conf import settingsfrom telegram.utils.request import Requestfrom my_telegram_bot.models import Profile, Messageimport telebotfrom telebot import typesfrom telegram import ReplyKeyboardMarkupfrom telegram import KeyboardButtonboti = telebot.TeleBot(settings.TOKEN)def log_errors(f):    def inner(*args, **kwargs):        try:            return f(*args, **kwargs)        except Exception as e:            error_message = f'–°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞: {e}'            print(error_message)            raise e    return inner@log_errorsdef do_echo(update: Update, context: CallbackContext):    chat_id = update.message.chat_id    text = update.message.text    profile, _ = Profile.objects.get_or_create(        external_id=chat_id,        defaults={            'name': update.message.from_user.username        }    )    mes = Message(        profile=profile,        text=text,    )    mes.save()    update.message.reply_text(        text=f'–í–∞—à id = {chat_id}\n{text}'    )@log_errorsdef do_count(update, context):    chat_id = update.message.chat_id    profile, _ = Profile.objects.get_or_create(        external_id=chat_id,        defaults={            'name': update.message.from_user.username        }    )    count = Message.objects.filter(profile=profile).count()    update.message.reply_text(        text=f'–£ –≤–∞—Å {count} –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å'    )@log_errorsdef do_start(update, context):    send_mess = f'–ü—Ä–∏–≤—ñ—Ç, {update.message.from_user.first_name}'    update.message.reply_text(        text=send_mess,        parse_mode='html'    )class Command(BaseCommand):    help = '–¢–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç'    def handle(self, *args, **options):        request = Request(            connect_timeout=0.5,            read_timeout=1.0,        )        bot = Bot(            request=request,            token=settings.TOKEN,        )        print(bot.get_me())        updater = Updater(            bot=bot,            use_context=True,        )        start = CommandHandler('start', do_start)        updater.dispatcher.add_handler(start)        count = CommandHandler('count', do_count)        updater.dispatcher.add_handler(count)        echo = MessageHandler(Filters.text, do_echo)        updater.dispatcher.add_handler(echo)        updater.start_polling()        updater.idle()""" @bot.message_handler(commands=['start'])        def do_start(message, context):            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)            btn1 = types.KeyboardButton("üëã –ü–æ–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è")            btn2 = types.KeyboardButton("‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å")            markup.add(btn1, btn2)            bot.send_message(message.chat.id,                             text="–ü—Ä–∏–≤–µ—Ç, {0.first_name}! –Ø —Ç–µ—Å—Ç–æ–≤—ã–π –±–æ—Ç –¥–ª—è —Ç–≤–æ–µ–π —Å—Ç–∞—Ç—å–∏ –¥–ª—è habr.com".format(                                 message.from_user), reply_markup=markup)"""